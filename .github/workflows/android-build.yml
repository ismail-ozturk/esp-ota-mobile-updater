name: Android Build ESP OTA Updater

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manuel tetikleme için

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # Repository'yi checkout et
    - name: Checkout repository
      uses: actions/checkout@v4
      
    # JDK 17 kurulumu (Android için gerekli)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # Node.js kurulumu ve cache
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'ESPOTAUpdater/package-lock.json'
        
    # Android SDK kurulumu
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    # Node modules cache
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: ESPOTAUpdater/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('ESPOTAUpdater/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    # Gradle cache
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('ESPOTAUpdater/android/**/*.gradle*', 'ESPOTAUpdater/android/**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    # npm dependencies yükle
    - name: Install npm dependencies
      run: |
        cd ESPOTAUpdater
        npm ci --prefer-offline --no-audit
        
    # React Native dependencies kontrol
    - name: Verify React Native dependencies
      run: |
        cd ESPOTAUpdater
        npx react-native info
        
    # Gradle wrapper'ı doğrula
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
      with:
        gradle-wrapper-directory: ESPOTAUpdater/android
        
    # gradlew dosyasını executable yap
    - name: Make gradlew executable
      run: |
        cd ESPOTAUpdater/android
        chmod +x gradlew
        
    # Android dependencies yükle
    - name: Download Android dependencies
      run: |
        cd ESPOTAUpdater/android
        ./gradlew androidDependencies
        
    # Clean build
    - name: Clean build
      run: |
        cd ESPOTAUpdater/android
        ./gradlew clean
        
    # Debug APK build
    - name: Build Debug APK
      run: |
        cd ESPOTAUpdater/android
        ./gradlew assembleDebug
        
    # Release APK build (optional)
    - name: Build Release APK
      run: |
        cd ESPOTAUpdater/android
        ./gradlew assembleRelease
      continue-on-error: true  # Signing olmadığı için hata verebilir
        
    # APK dosyalarını listele (debug için)
    - name: List APK files
      run: |
        find ESPOTAUpdater/android/app/build/outputs/apk -name "*.apk" -type f
        
    # Debug APK'yı artifact olarak yükle
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: esp-ota-updater-debug-apk
        path: ESPOTAUpdater/android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    # Release APK'yı artifact olarak yükle (varsa)
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: esp-ota-updater-release-apk
        path: ESPOTAUpdater/android/app/build/outputs/apk/release/app-release-unsigned.apk
        retention-days: 30
      continue-on-error: true
        
    # Build raporunu yükle
    - name: Upload build reports
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-reports
        path: |
          ESPOTAUpdater/android/app/build/reports
          ESPOTAUpdater/android/app/build/outputs/logs
        retention-days: 7
        
    # APK boyutunu kontrol et
    - name: Check APK size
      run: |
        if [ -f "ESPOTAUpdater/android/app/build/outputs/apk/debug/app-debug.apk" ]; then
          APK_SIZE=$(stat -c%s "ESPOTAUpdater/android/app/build/outputs/apk/debug/app-debug.apk")
          APK_SIZE_MB=$((APK_SIZE / 1024 / 1024))
          echo "Debug APK size: ${APK_SIZE_MB} MB"
          
          if [ $APK_SIZE_MB -gt 100 ]; then
            echo "⚠️  Warning: APK size is larger than 100MB"
          else
            echo "✅ APK size is acceptable"
          fi
        fi

  # Test job (opsiyonel)
  test:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'ESPOTAUpdater/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd ESPOTAUpdater
        npm ci
        
    - name: Run tests
      run: |
        cd ESPOTAUpdater
        npm test -- --watchAll=false
      continue-on-error: true
        
    - name: Run linting
      run: |
        cd ESPOTAUpdater
        npm run lint
      continue-on-error: true
